# Unified application configuration file

# ======================================================
# Section from: configlog.yaml
# ======================================================
log:
  level: "debug"
  format: "json"
  file: ""

# ======================================================
# Section from: config.yaml
# ======================================================
metrics-db:
  environment: "metrics-collector"
  host: "elmon-postgres-main"
  port: 5432
  user: "${METRICS_DB_USER}"
  password: "${METRICS_DB_PASSWORD}"
  dbname: "metrics"

grafana:
  url: "http://elmon-grafana:3000"
  token: "${METRICS_GRAFANA_TOKEN}"
  datasource:
    name: elmon_metrics
    url: elmon-postgres-main:5432
    database: metrics
    user: ${METRICS_DB_USER}
    password: "${METRICS_DB_PASSWORD}"
    ssl-mode: disable
  dashboard:
    name: elmon
    file: "./grafana/dashboards/elmon.json"
    input: DS_ELMON_METRICS
    overwrite: true


# ======================================================
# Section from: configservers.yaml
# ======================================================
db-servers:
  - # test target server
    name: "test_target_server"
    environment: "test"
    host: "elmon-postgres-target"
    port: 5432
    user: "${METRICS_TEST_DB_USER}"
    password: "${METRICS_TEST_DB_PASSWORD}"
    dbname: "application"
  - # metrics server (self monitoring)
    name: "metrics"
    environment: "metrics-collector"
    host: "elmon-postgres-main"
    port: 5432
    user: "${METRICS_DB_USER}"
    password: "${METRICS_DB_PASSWORD}"
    dbname: "metrics"

# ======================================================
# Section from: configmetrics.yaml
# ======================================================
metrics:
  version: "1.0"
  description: "Configuration for monitoring core database metrics"
  global:
    default-interval: 30s
    default-query-timeout: 15s
    default-max-retries: 0
    default-retry-delay: 1s
  metric-groups:
    - name: database_performance
      description: Key metrics for database performance
      enabled: true
      metrics:
        - name: cache_hit_ratio
          value-type: float
          collection-type: sql
          sql-file: sql/script/metrics/database_perfomance/cache_hit.sql
          interval: 1m
          max-retries: 5
          unit: "percent"
        - name: total_transactions
          value-type: int64
          collection-type: sql
          sql-file: sql/script/metrics/database_perfomance/total_tx.sql
          interval: 5s
          max-retries: 0
        - name: db_uptime
          value-type: int64
          collection-type: go_func
          go-function: "collectPostgresUptime"
          interval: 10s
          max-retries: 3
          retry-delay: 2s
          query-timeout: 10s
          unit: "seconds"
        - name: total_execution_time
          value-type: table
          collection-type: sql
          sql-file: sql/script/metrics/database_perfomance/total_execution_time.sql
          interval: 10s
          max-retries: 5
          query-timeout: 10s
          unit: "table"
        - name: connection_count
          value-type: table
          collection-type: sql
          sql-file: sql/script/metrics/database_perfomance/connection_count.sql
          interval: 10s
          max-retries: 5
          query-timeout: 10s
          unit: "table"
        - name: wait
          value-type: table
          collection-type: sql
          sql-file: sql/script/metrics/database_perfomance/wait.sql
          interval: 10s
          max-retries: 5
          query-timeout: 10s
          unit: "table"
        - name: wait_locks
          value-type: table
          collection-type: sql
          sql-file: sql/script/metrics/database_perfomance/wait_locks.sql
          interval: 10s
          max-retries: 5
          query-timeout: 10s
          unit: "table"
    - name: system_health
      description: Operating system health metrics
      enabled: true
      metrics:
        - name: cpu_load
          value-type: float
          collection-type: go_func
          go-function: "GetHostCPU"
          query-timeout: 5s
          unit: "percentage"
        - name: host_status
          description: Host accessibility check
          value-type: bool
          collection-type: go_func
          go-function: "IsHostReachable"
          retry-delay: 1s

# ======================================================
# Section from: configserversmetrics.yaml
# Note: The root key is changed from 'servers' to 'servers-metrics-map'
# to match the AppConfig struct tag.
# ======================================================
servers-metrics-map:
  - name: test_target_server
    metrics:
      - name: cache_hit_ratio
        interval: 10s
        max-retries: 0
        retry-delay: 0s
        query-timeout: 5s
      - name: total_transactions
        query-timeout: 5s
      - name: db_uptime
      - name: total_execution_time
      - name: connection_count
      - name: wait_locks
      - name: wait
  - name: metrics
    metrics:
      - name: cache_hit_ratio
        interval: 10s
        max-retries: 0
        retry-delay: 0s
        query-timeout: 5s
      - name: total_transactions
        query-timeout: 5s
      - name: db_uptime
      - name: total_execution_time
      - name: connection_count
      - name: wait_locks
      - name: wait